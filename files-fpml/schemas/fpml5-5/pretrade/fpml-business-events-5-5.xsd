<?xml version="1.0" encoding="utf-8"?>
<!-- 
== Copyright (c) 2002-2013 All rights reserved. 
== Financial Products Markup Language is subject to the FpML public license. 
== A copy of this license is available at http://www.fpml.org/license/license.html
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns="http://www.fpml.org/FpML-5/pretrade" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:fpml-annotation="http://www.fpml.org/annotation" targetNamespace="http://www.fpml.org/FpML-5/pretrade" ecore:documentRoot="FpML" ecore:nsPrefix="pre" ecore:package="org.fpml.pretrade" version="$Revision: 10452 $" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xsd:include schemaLocation="fpml-msg-5-5.xsd" />
  <xsd:include schemaLocation="fpml-asset-5-5.xsd" />
  <xsd:complexType name="AbstractEvent" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Abstract base type for all events.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="eventIdentifier" minOccurs="0" maxOccurs="unbounded" type="BusinessEventIdentifier" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AdditionalEvent" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Abstract base type for an extension/substitution point to customize FpML and add additional events.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractEvent" />
    </xsd:complexContent>
  </xsd:complexType>
<!-- APP added for EQS PSA CFD proposal -->
  <xsd:complexType name="BasketChangeEvent">
    <xsd:annotation>
      <xsd:documentation>A structure indicating that the basket underlyer of the trade has changed due to client trading activity</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ChangeEvent">
<!--View Generation: Skipped an empty sequence.-->
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BusinessEventIdentifier">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining an event identifier issued by the indicated party.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="PartyAndAccountReferences.model">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A pointer style reference to a party identifier and optionally an account identifier defined elsewhere in the document. The party referenced has allocated the trade identifier.</xsd:documentation>
        </xsd:annotation>
      </xsd:group>
      <xsd:element name="eventId" type="EventId" minOccurs="0"></xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:ID" />
  </xsd:complexType>
  <xsd:complexType name="ChangeEvent" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Abstract base type for non-negotiated trade change descriptions</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractEvent">
<!--View Generation: Skipped an empty sequence.-->
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
<!--View Generation: SKIPPED ClearingStatusItem - PartySpecific-->
  <xsd:complexType name="CompressionActivity">
    <xsd:annotation>
      <xsd:documentation>A type that shows how multiple trades have been combined into a result.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="compressionType" type="CompressionType" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:sequence>
          <xsd:element name="replacementTradeIdentifier" type="TradeIdentifier" minOccurs="0" />
          <xsd:element name="originatingTradeIdentifier" type="TradeIdentifier" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:sequence>
          <xsd:annotation>
            <xsd:documentation>This option is deprecated in favour of the first choice.</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="replacementTradeId" type="TradeId" minOccurs="0" fpml-annotation:deprecated="true" fpml-annotation:deprecatedReason="Deprecated in favor of replacementTradeIdentifier" />
          <xsd:element name="originatingTradeId" type="TradeId" minOccurs="0" maxOccurs="unbounded" fpml-annotation:deprecated="true" fpml-annotation:deprecatedReason="Deprecated in favor of originatingTradeIdentifier" />
        </xsd:sequence>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CompressionType">
    <xsd:annotation>
      <xsd:documentation>A type that identifies the type of trade amalgamation, for example netting or portfolio compression.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="compressionTypeScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/compression-type" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
<!-- APP added for EQS PSA CFD proposal -->
  <xsd:complexType name="CorporateActionEvent">
    <xsd:annotation>
      <xsd:documentation>A structure indicating that a trade has changed due to a corporate action</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ChangeEvent">
        <xsd:sequence>
          <xsd:element name="type" type="CorporateActionType" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TradingEventSummary">
    <xsd:annotation>
      <xsd:documentation>A type that records a short form event history of a trade.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="eventIdentifier" minOccurs="0" maxOccurs="unbounded" type="BusinessEventIdentifier" />
      <xsd:element name="eventType" type="EventType" minOccurs="0"></xsd:element>
      <xsd:group ref="AgreementAndEffectiveDates.model" />
      <xsd:element name="payment" type="NonNegativePayment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A fee which compensates one of the parties for taking on a position that is off market.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EventType">
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="eventTypeScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/event-type" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="CorporateActionType">
    <xsd:annotation>
      <xsd:documentation>A type that describes what type of corporate action occurred.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="corporateActionScheme" type="xsd:anyURI" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
<!--View Generation: SKIPPED DeClear - Unsupported-->
  <xsd:complexType name="DeclearReason">
    <xsd:annotation>
      <xsd:documentation>A type that describes why a trade was removed from clearing.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="declearReasonScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/declear-reason" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="EventId">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A post-trade event reference identifier allocated by a party. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="eventIdScheme" type="xsd:anyURI" />
        <xsd:attribute name="id" type="xsd:ID" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
<!--View Generation: SKIPPED EventProposedMatch - Unsupported-->
<!--View Generation: SKIPPED EventsChoice - Unsupported-->
  <xsd:complexType name="IndexChange">
    <xsd:annotation>
      <xsd:documentation>A structure describing the effect of a change to an index.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ChangeEvent">
        <xsd:sequence>
          <xsd:element name="indexFactor" type="xsd:decimal" minOccurs="0" />
          <xsd:element name="factoredCalculationAmount" type="Money" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
<!--View Generation: SKIPPED ImpliedTrade - Unsupported-->
<!--View Generation: SKIPPED OptionExercise - Unsupported-->
<!--View Generation: SKIPPED OptionExpiry - Unsupported-->
  <xsd:complexType name="OptionExpiryBase">
    <xsd:annotation>
      <xsd:documentation>A structure describing an option expiring.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tradeIdentifier" type="PartyTradeIdentifier" maxOccurs="unbounded" minOccurs="0" />
      <xsd:element name="date" type="xsd:date" minOccurs="0" />
      <xsd:element name="time" type="xsd:time" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
<!--View Generation: SKIPPED PhysicalExercise - Unsupported-->
<!--View Generation: SKIPPED PhysicalSettlement - Unsupported-->
  <xsd:complexType name="RequestedWithdrawalAction">
    <xsd:annotation>
      <xsd:documentation>A type that describes what the requester would like to see done to implement the withdrawal, e.g. ExpungeRecords, RetainRecords.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="requestedWithdrawalActionScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/requested-withdrawal-action" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TerminatingEvent">
    <xsd:annotation>
      <xsd:documentation>A type that describes why a trade terminated.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="terminatingEventScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/terminating-event" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
<!--View Generation: SKIPPED TradeAmendmentContent - Unsupported-->
  <xsd:complexType name="TradeChangeBase">
    <xsd:annotation>
      <xsd:documentation>A structure describing a trade change.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AbstractEvent">
        <xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="tradeIdentifier" type="PartyTradeIdentifier" maxOccurs="unbounded" />
            <xsd:element name="originalTrade" type="Trade"></xsd:element>
          </xsd:choice>
          <xsd:group ref="AgreementAndEffectiveDates.model" />
          <xsd:group ref="TradeAlterationPayment.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
<!--View Generation: SKIPPED TradeChangeContent - Unsupported-->
  <xsd:complexType name="TradeMaturity">
    <xsd:annotation>
      <xsd:documentation>A structure describing a trade maturing.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tradeIdentifier" type="PartyTradeIdentifier" maxOccurs="unbounded" minOccurs="0" />
      <xsd:element name="date" type="xsd:date" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
<!--View Generation: SKIPPED TradeNotionalChange - Unsupported-->
  <xsd:complexType name="TradeLegSizeChange">
    <xsd:annotation>
      <xsd:documentation>A structure describing a change to the size of a single leg or stream of a trade.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:group ref="TradeLegNotionalChange.model" />
      <xsd:group ref="TradeLegNumberOfOptionsChange.model" />
      <xsd:group ref="TradeLegNumberOfUnitsChange.model" />
    </xsd:choice>
  </xsd:complexType>
  <xsd:group name="TradeLegNotionalChange.model">
    <xsd:sequence>
      <xsd:element name="notionalReference" type="NotionalReference" minOccurs="0" />
<!-- in the future perhaps this should allow a notional schedule to be put in here instead of a single value -->
      <xsd:element name="changeInNotionalAmount" type="NonNegativeMoney" minOccurs="0"></xsd:element>
      <xsd:element name="outstandingNotionalAmount" type="NonNegativeMoney" minOccurs="0"></xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TradeLegNumberOfOptionsChange.model">
    <xsd:sequence>
      <xsd:element name="numberOfOptionsReference" type="NumberOfOptionsReference" minOccurs="0" />
      <xsd:element name="changeInNumberOfOptions" type="xsd:decimal" minOccurs="0"></xsd:element>
      <xsd:element name="outstandingNumberOfOptions" type="xsd:decimal" minOccurs="0"></xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TradeLegNumberOfUnitsChange.model">
    <xsd:sequence>
      <xsd:element name="numberOfUnitsReference" type="NumberOfUnitsReference" minOccurs="0" />
      <xsd:element name="changeInNumberOfUnits" type="xsd:decimal" minOccurs="0"></xsd:element>
      <xsd:element name="outstandingNumberOfUnits" type="xsd:decimal" minOccurs="0"></xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TradeNotionalChange.model" fpml-annotation:deprecated="true" fpml-annotation:deprecatedReason="The model could not provide support for linking notionals with product legs. Also, there was limitation in the existing increase and termination events which don’t allow the reporting of both change of units or change of notional amount as required for dividend swaps, for example. Instead, sizeChange, should be used.">
    <xsd:annotation>
      <xsd:documentation>DEPRECATED. A structure describing a change to the trade notional.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="changeInNotionalAmount" type="NonNegativeMoney" maxOccurs="unbounded" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the fixed amount by which the Notional Amount changes. The direction of the change (increase or decrease) is specified by the event type (Termination =&gt; reduction, Increase =&gt; greater.)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="outstandingNotionalAmount" type="NonNegativeMoney" maxOccurs="unbounded" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the Notional amount after the Change</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="changeInNumberOfOptions" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the fixed amount by which the Number of Options changes</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="outstandingNumberOfOptions" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the Number of Options after the Change.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="changeInNumberOfUnits" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the fixed amount by which the Number of Units changes</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="outstandingNumberOfUnits" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">Specifies the Number of Units</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:group>
<!--View Generation: SKIPPED TradeNovationContent - Unsupported-->
  <xsd:complexType name="TradeReferenceInformation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a type that allows trade identifiers and/or trade information to be represented for a trade.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="originatingEvent" type="OriginatingEvent">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">This may be used to describe why a trade was created. This can be used to provide context for a newly created trade that is not part of a post-trade event. For example, it can report that the trade was created as a result of netting activity, or due to a transfer, an allocation process, etc. Omitting this implies that the trade record was created as a result of a negotiated new trade.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="terminatingEvent" type="TerminatingEvent">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">This may be used to describe why a trade was terminated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="partyTradeIdentifier" type="PartyTradeIdentifier" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">This allows the acknowledging party to supply additional trade identifiers for a trade underlying a request relating to a business event.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="partyTradeInformation" type="PartyTradeInformation" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">This allows the acknowledging party to supply additional trade information about a trade underlying a request relating to a business event.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="productType" type="ProductType" minOccurs="0" />
      <xsd:element name="productId" type="ProductId" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
<!--View Generation: SKIPPED Withdrawal - Unsupported-->
  <xsd:complexType name="WithdrawalReason">
    <xsd:annotation>
      <xsd:documentation>A type that describes why a trade was withdrawn.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="withdrawalReasonScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/withdrawal-reason" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="additionalEvent" type="AdditionalEvent" abstract="true">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The additionalEvent element is an extension/substitution point to customize FpML and add additional events.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="changeEvent" type="ChangeEvent">
    <xsd:annotation>
      <xsd:documentation>Abstract substitutable place holder for specific change details.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
<!-- APP added for EQS PSA CFD proposal -->
  <xsd:element name="basketChange" type="BasketChangeEvent" substitutionGroup="changeEvent">
    <xsd:annotation>
      <xsd:documentation>Describes a change due to change in composition of basket underlyer</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
<!-- APP added for EQS PSA CFD proposal -->
  <xsd:element name="corporateAction" type="CorporateActionEvent" substitutionGroup="changeEvent">
    <xsd:annotation>
      <xsd:documentation>Describes a change due to a corporate action</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="indexChange" type="IndexChange" substitutionGroup="changeEvent">
    <xsd:annotation>
      <xsd:documentation>Describes a change due to an index component being adjusted.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:group name="AgreementAndEffectiveDates.model">
    <xsd:annotation>
      <xsd:documentation>A model group defining agreement and effective dates.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="agreementDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date on which the change was agreed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="executionDateTime" type="ExecutionDateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date and time at which the negotiated change to the terms of the original contract was agreed, such as via telephone or electronic trading system (i.e., agreement date/time).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="effectiveDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date on which the change become effective.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
<!--View Generation: SKIPPED Compression.model - Unsupported-->
  <xsd:group name="Events.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Choice between a trade and a post-trade event.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:sequence>
<!--View Generation: SKIPPED originatingEvent - Unsupported-->
        <xsd:element name="trade" type="Trade"></xsd:element>
<!--View Generation: SKIPPED tradingEvent - Unsupported-->
      </xsd:sequence>
<!--View Generation: SKIPPED amendment - Unsupported-->
<!--View Generation: SKIPPED increase - Unsupported-->
<!--View Generation: Skipped an empty sequence.-->
<!--View Generation: SKIPPED novation - Unsupported-->
<!--View Generation: SKIPPED change - Unsupported-->
<!--View Generation: SKIPPED optionExercise - Unsupported-->
<!--View Generation: SKIPPED optionExpiry - Unsupported-->
<!--View Generation: SKIPPED deClear - Unsupported-->
<!--View Generation: SKIPPED withdrawal - Unsupported-->
<!--View Generation: SKIPPED  - Unsupported-->
    </xsd:choice>
  </xsd:group>
<!--View Generation: SKIPPED EventValuation.model - Unsupported-->
  <xsd:group name="FeeTrade.model">
    <xsd:choice>
      <xsd:element name="feeTradeIdentifier" type="PartyTradeIdentifier">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates a reference to the implied trade (the "fee trade") that the associated novation fee based on. This is equivalent to the new trade that is created by the novation (between the transferee and the remaining party), but is between the transferor and the transferee.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="feeTrade" type="Trade">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates the original trade between the transferor and the remaining party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:group>
<!--View Generation: SKIPPED MaturityAndExpiryEvents.model - Unsupported-->
  <xsd:group name="NewTrade.model">
    <xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Choice between identification and representation of the new contract.</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="newTradeIdentifier" type="PartyTradeIdentifier" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates a reference to the new trade between the transferee and the remaining party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="newTrade" type="Trade">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates the new trade between the transferee and the remaining party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:group>
  <xsd:group name="NovationAmounts.model">
    <xsd:choice>
      <xsd:group ref="NovationAmountsOld.model" />
      <xsd:element name="novationAmount" type="TradeLegSizeChange" maxOccurs="unbounded" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="NovationAmountsOld.model">
    <xsd:choice>
      <xsd:annotation>
        <xsd:documentation xml:lang="en">Choice for expressing the novated amount as either a money amount, number of options, or number of units, according the the financial product which is being novated.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="novatedAmount" type="Money" maxOccurs="unbounded" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The amount which represents the portion of the Old Contract being novated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="remainingAmount" type="Money" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The amount which represents the portion of the Old Contract not being novated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="novatedNumberOfOptions" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The number of options which represent the portion of the Old Contract being novated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="remainingNumberOfOptions" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The number of options which represent the portion of the Old Contract not being novated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="novatedNumberOfUnits" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The number of options which represent the portion of the Old Contract being novated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="remainingNumberOfUnits" type="xsd:decimal" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">The number of options which represent the portion of the Old Contract not being novated.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:group>
  <xsd:group name="NovationDates.model">
    <xsd:sequence>
      <xsd:element name="novationDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Specifies the date that one party's legal obligations with regard to a trade are transferred to another party. It corresponds to the Novation Date section of the 2004 ISDA Novation Definitions, section 1.16.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="executionDateTime" type="ExecutionDateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date and time at which the change was agreed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="novationTradeDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Specifies the date the parties agree to assign or novate a Contract. If this element is not specified, the novationContractDate will be deemed to be the novationDate. It corresponds to the Novation Trade Date section of the 2004 ISDA Novation Definitions, section 1.17.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NovationRoles.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The roles of the parties involved in the novation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="transferor" type="PartyReference" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a three-way novation the party referenced is the Transferor (outgoing party) in the novation. The Transferor means a party which transfers by novation to a Transferee all of its rights, liabilities, duties and obligations with respect to a Remaining Party. In a four-way novation the party referenced is Transferor 1 which transfers by novation to Transferee 1 all of its rights, liabilities, duties and obligations with respect to Transferor 2. ISDA 2004 Novation Term: Transferor (three-way novation) or Transferor 1 (four-way novation).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transferorAccount" type="AccountReference" minOccurs="0"></xsd:element>
      <xsd:element name="transferee" type="PartyReference" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a three-way novation the party referenced is the Transferee (incoming party) in the novation. Transferee means a party which accepts by way of novation all rights, liabilities, duties and obligations of a Transferor with respect to a Remaining Party. In a four-way novation the party referenced is Transferee 1 which accepts by way of novation the rights, liabilities, duties and obligations of Transferor 1. ISDA 2004 Novation Term: Transferee (three-way novation) or Transferee 1 (four-way novation).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="otherTransferee" type="PartyReference" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a five-way novation the party referenced is the Transferee's legal entity that is involved in the settlement of the fee leg of the novation transaction (this might be a different legal entity than the one that assumes the novation trade). NB: this element has been added pending confirmation of the business need/context in which it would be used, and might not appear in a subsequent draft of this schema.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transfereeAccount" type="AccountReference" minOccurs="0"></xsd:element>
      <xsd:element name="otherTransfereeAccount" type="AccountReference" minOccurs="0"></xsd:element>
      <xsd:element name="remainingParty" type="PartyReference" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a three-way novation the party referenced is the Remaining Party in the novation. Remaining Party means a party which consents to a Transferor's transfer by novation and the acceptance thereof by the Transferee of all of the Transferor's rights, liabilities, duties and obligations with respect to such Remaining Party under and with respect of the Novated Amount of a transaction. In a four-way novation the party referenced is Transferor 2 per the ISDA definition and acts in the role of a Transferor. Transferor 2 transfers by novation to Transferee 2 all of its rights, liabilities, duties and obligations with respect to Transferor 1. ISDA 2004 Novation Term: Remaining Party (three-way novation) or Transferor 2 (four-way novation).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="remainingPartyAccount" type="AccountReference" minOccurs="0"></xsd:element>
      <xsd:element name="otherRemainingParty" type="PartyReference" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. This element is not applicable in a three-way novation and should be omitted. In a four-way novation the party referenced is Transferee 2. Transferee 2 means a party which accepts by way of novation the rights, liabilities, duties and obligations of Transferor 2. ISDA 2004 Novation Term: Transferee 2 (four-way novation).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="otherRemainingPartyAccount" type="AccountReference" minOccurs="0"></xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NovationTerms.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Documentation and other terms (such as date terms) specific to this novation event.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fullFirstCalculationPeriod" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">This element corresponds to the applicability of the Full First Calculation Period as defined in the 2004 ISDA Novation Definitions, section 1.20.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="firstPeriodStartDate" type="FirstPeriodStartDate" minOccurs="0" maxOccurs="2">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Element that is used to be able to make sense of the “new transaction” without requiring reference back to the “old transaction”. In the case of interest rate products there are potentially 2 “first period start dates” to reference – one with respect to each party to the new transaction. For Credit Default Swaps there is just the one with respect to the party that is the fixed rate payer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="nonReliance" type="Empty" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">This element corresponds to the non-Reliance section in the 2004 ISDA Novation Definitions, section 2.1 (c) (i). The element appears in the instance document when non-Reliance is applicable.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creditDerivativesNotices" type="CreditDerivativesNotices" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">This element should be specified if one or more of either a Credit Event Notice, Notice of Publicly Available Information, Notice of Physical Settlement or Notice of Intended Physical Settlement, as applicable, has been delivered by or to the Transferor or the Remaining Party. The type of notice or notices that have been delivered should be indicated by setting the relevant boolean element value(s) to true. The absence of the element means that no Credit Event Notice, Notice of Publicly Available Information, Notice of Physical Settlement or Notice of Intended Physical Settlement, as applicable, has been delivered by or to the Transferor or the Remaining Party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="contractualDefinitions" type="ContractualDefinitions" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The definitions (such as those published by ISDA) that will define the terms of the novation transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="contractualTermsSupplement" type="ContractualTermsSupplement" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">A contractual supplement (such as those published by ISDA) that will apply to the trade.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="OldTrade.model">
    <xsd:choice>
      <xsd:element name="oldTradeIdentifier" type="PartyTradeIdentifier" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates a reference to the original trade between the transferor and the remaining party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="oldTrade" type="Trade">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates the original trade between the transferor and the remaining party.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:group>
<!--View Generation: SKIPPED ProposedMatch.model - Unsupported-->
  <xsd:group name="TradeAlterationPayment.model">
    <xsd:annotation>
      <xsd:documentation>A model group defining a payment structure.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="payment" type="Payment" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Describes a payment made in settlement of the change. Normally there will be a single fee, but there could be additional payments such as principal exchanges resulting from the termination.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
<!--View Generation: SKIPPED TradeOrInfo.model - PartySpecific-->
  <xsd:group name="TradeReferenceInformation.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a model group that allows information about a trade to be represented.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tradeReferenceInformation" type="TradeReferenceInformation" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Information about a trade.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>

