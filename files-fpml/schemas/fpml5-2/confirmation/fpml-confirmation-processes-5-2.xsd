<?xml version="1.0" encoding="utf-8"?>
<!-- 
== Copyright (c) 2002-2011 All rights reserved. 
== Financial Products Markup Language is subject to the FpML public license. 
== A copy of this license is available at http://www.fpml.org/license/license.html
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:view="http://www.fpml.org/views" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns="http://www.fpml.org/FpML-5/confirmation" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:fpml-annotation="http://www.fpml.org/annotation" targetNamespace="http://www.fpml.org/FpML-5/confirmation" ecore:documentRoot="FpML" ecore:nsPrefix="conf" ecore:package="org.fpml.confirmation" version="$Revision: 8672 $" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xsd:include schemaLocation="fpml-business-events-5-2.xsd" />
  <xsd:complexType name="AllocationApproved">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:element name="blockTradeIdentifier" type="TradeIdentifier" minOccurs="0" />
          <xsd:element name="allocations" type="Allocations" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AllocationRefused">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:element name="blockTradeIdentifier" type="TradeIdentifier" minOccurs="0" />
          <xsd:element name="allocations" type="Allocations" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
          <xsd:element name="reason" type="Reason" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Clearing">
    <xsd:annotation>
      <xsd:documentation>A structure describing a trade registration event that is part of a clearing process.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="submitted" type="TradeWrapper">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The original trade or event submitted to the clearing service.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cleared" type="TradeWrapper" minOccurs="2" maxOccurs="2">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">The trades or events generated by the clearing service as a result of clearing.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ClearingConfirmed">
    <xsd:complexContent>
      <xsd:extension base="NotificationMessage">
        <xsd:sequence>
          <xsd:group ref="Compression.model" minOccurs="0" />
          <xsd:group ref="PortfolioReferenceFull.model" minOccurs="0" />
          <xsd:group ref="ClearingResults.model" minOccurs="0" />
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ClearingRefused">
    <xsd:complexContent>
      <xsd:extension base="NotificationMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
          <xsd:element name="reason" type="Reason" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ClearingStatus">
    <xsd:complexContent>
      <xsd:extension base="NotificationMessage">
        <xsd:sequence>
          <xsd:element name="clearingStatusItem" type="ClearingStatusItem" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Describes the status of the clearing process relating to the identified trade.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ClearingStatusItem">
    <xsd:sequence>
      <xsd:element name="tradeIdentifier" type="TradeIdentifier" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Identifier(s) for the trade which is the subject of the clearing request to which this status relates.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="clearingStatusValue" type="ClearingStatusValue">
        <xsd:annotation>
          <xsd:documentation>The status of the clearing process for the identified trade.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="reason" type="Reason" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Supporting information which may be produced to explain the clearing process status. This may be a business reason e.g. failed eligibility criteria.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="statusAppliesTo" type="PartyReference" minOccurs="0" maxOccurs="2">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Reference to parties currently in this status, e.g. parties for which we are awaiting approval.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ClearingStatusValue">
    <xsd:simpleContent>
      <xsd:extension base="Scheme">
        <xsd:attribute name="clearingStatusScheme" type="xsd:anyURI" default="http://www.fpml.org/coding-scheme/clearing-status" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ConfirmationAgreed">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ConfirmationDisputed">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
          <xsd:element name="reason" type="Reason" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ConfirmationRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ConfirmationStatus">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Message for sending matching results. Response message that returns the status of an event that have been submitted for matching.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:element name="status" type="EventStatus">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Defines the confirmation status of a trade or post-trade event (e.g. Matched, Mismatched, Unmatched, Alleged).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:choice>
            <xsd:sequence>
              <xsd:element name="assertedEvent" type="EventsChoice">
                <xsd:annotation>
                  <xsd:documentation xml:lang="en">Event (trade or post-trade event) asserted by one of the parties.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="proposedMatch" type="EventProposedMatch" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                  <xsd:documentation xml:lang="en">"Other side's" event (trade or post-trade event) that meets the minimimum matching criteria and is proposed as match to the event that is being asserted.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:element name="allegedEvent" type="EventsChoice">
              <xsd:annotation>
                <xsd:documentation xml:lang="en">Event (trade post-trade event) asserted by the "other side's" party.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ConsentGranted">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:group ref="PortfolioReference.model" minOccurs="0" />
          <xsd:group ref="EventsOrInfo.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ConsentRefused">
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:group ref="EventsOrInfo.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
          <xsd:element name="reason" type="Reason" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EventRequestAcknowledgement">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the structure for a message acknowledging an event request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="ResponseMessage">
        <xsd:sequence>
          <xsd:element name="originalMessage" type="UnprocessedElementWrapper" minOccurs="0" />
          <xsd:group ref="TradeReferenceInformation.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ExecutionAdvice">
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="productType" type="ProductType" minOccurs="0" />
          <xsd:group ref="Events.model" />
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:element name="paymentDetails" type="PaymentDetails" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Details of the payments, like amount breakdowns, settlement information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ExecutionAdviceRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:element name="paymentDetails" type="PaymentDetails" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Details of the payments, like amount breakdowns, settlement information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ExecutionNotification">
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" />
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ExecutionRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MaturityNotification">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A message used to notify another party that a trade has matured. This can be used to report, for example, that a swap has passed its final payment and can be removed, or that an option has expired without being executed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="optionExpiry" type="OptionExpiryBase" />
            <xsd:element name="tradeMaturity" type="TradeMaturity" />
          </xsd:choice>
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PortfolioReference">
    <xsd:annotation>
      <xsd:documentation>A structure used to identify a portfolio in a response message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="portfolioName" type="PortfolioName">
        <xsd:annotation>
          <xsd:documentation>An identifier that is unique for each portfolio-level request, and which can be used to group together the individual messages in the portfolio request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PortfolioReferenceFull">
    <xsd:annotation>
      <xsd:documentation>A structure used to group together individual messages that can be acted on at a group level.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="portfolioName" type="PortfolioName">
        <xsd:annotation>
          <xsd:documentation>An identifier that is unique for each portfolio-level request, and which can be used to group together the individual messages in the portfolio request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="sequenceNumber" type="xsd:positiveInteger">
        <xsd:annotation>
          <xsd:documentation>A numeric, sequentially ascending (i.e. gapless) value (starting at 1) that can be used to identify and distinguish the individual constituents of a portfolio request. A recipient should ensure that all sequence numbers from 1 to the final sequence number (where submissionsComplete is true) have arrived before completing the portfolio request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="submissionsComplete" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">Indicates whether all individual requests have been submitted for this portfolio request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RequestAllocation">
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="relatedParty" type="RelatedParty" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Identifies a related party performing a role within the transaction.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="blockTradeIdentifier" type="TradeIdentifier" />
          <xsd:element name="allocations" type="Allocations" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestAllocationRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="blockTradeIdentifier" type="TradeIdentifier" minOccurs="0" />
          <xsd:element name="allocations" type="Allocations" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestClearing">
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="PortfolioReferenceFull.model" minOccurs="0" />
          <xsd:group ref="Events.model" />
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestClearingRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestConfirmation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A message type defining the start of the confirmation process. The message may be used to request the confirmation of a new trade or any other event supported by FpML such as novation, terminations, amendments, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestConsent">
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="requestedAction" type="RequestedAction" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The reason the consent was requested.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="PortfolioReferenceFull.model" minOccurs="0" />
          <xsd:group ref="Compression.model" minOccurs="0" />
          <xsd:group ref="Events.model" />
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestConsentRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestExecution">
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestExecutionRetracted">
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="Events.model" minOccurs="0" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestTradeReferenceInformationUpdate">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the structure for a message requesting information updates to a trade. The trade reference information should contain at least one trade identifier that the recipient is aware of.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="TradeReferenceInformation.model" />
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RequestTradeReferenceInformationUpdateRetracted">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines the structure for a message retracting a request to updated information about trade.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:group ref="TradeReferenceInformation.model" />
          <xsd:group ref="PartiesAndAccounts.model" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TradeChangeAdvice">
    <xsd:annotation>
      <xsd:documentation>Defines the structure for a message indicating that a trade is being changed due to a non-negotiated event.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="change" type="TradeChangeContent">
            <xsd:annotation>
              <xsd:documentation>Describes the details of the change.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="EventValuation.model" minOccurs="0" />
          <xsd:element name="paymentDetails" type="PaymentDetails" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Details of the payments, like amount breakdowns, settlement information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TradeChangeAdviceRetracted">
    <xsd:annotation>
      <xsd:documentation>Defines the structure for a message retracting a prior change advice.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="NonCorrectableRequestMessage">
        <xsd:sequence>
          <xsd:element name="tradeIdentifier" type="PartyTradeIdentifier" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>The qualified identifiers of the subject trade.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="change" type="TradeChangeContent" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Describes the details of the change being retracted.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="paymentDetails" type="PaymentDetails" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Details of the payments, like amount breakdowns, settlement information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="PartiesAndAccounts.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TradeWrapper">
    <xsd:annotation>
      <xsd:documentation>A structure that contains a business event.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="TradeOrInfo.model" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="ClearingResults.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Events/Results that are applicable to clearing processes.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:group ref="Events.model" />
      <xsd:element name="clearing" type="Clearing" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="EventsOrInfo.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a model group that allows either details of an event or information about a trade to be provided. Typically this will be used in a response to a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:group ref="Events.model" />
      <xsd:group ref="TradeReferenceInformation.model" />
    </xsd:choice>
  </xsd:group>
  <xsd:group name="PortfolioReference.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a model group that allows a portfolio reference response structure to be included in a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="portfolioReference" type="PortfolioReference" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="PortfolioReferenceFull.model">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Defines a model group that allows a portfolio reference request structure to be included in a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="portfolioReference" type="PortfolioReferenceFull" />
    </xsd:sequence>
  </xsd:group>
  <xsd:annotation>
    <xsd:documentation xml:lang="en">Confirmation messages.</xsd:documentation>
  </xsd:annotation>
<!-- Execution -->
  <xsd:element name="requestExecution" type="RequestExecution" />
  <xsd:element name="requestExecutionRetracted" type="RequestExecutionRetracted" />
  <xsd:element name="executionNotification" type="ExecutionNotification" />
  <xsd:element name="executionRetracted" type="ExecutionRetracted" />
  <xsd:element name="executionAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="executionException" type="Exception" />
<!-- Execution Advice -->
  <xsd:element name="executionAdvice" type="ExecutionAdvice" />
  <xsd:element name="executionAdviceRetracted" type="ExecutionAdviceRetracted" />
  <xsd:element name="executionAdviceAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="executionAdviceException" type="Exception" />
<!-- Maturity -->
  <xsd:element name="maturityNotification" type="MaturityNotification" />
  <xsd:element name="maturityAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="maturityException" type="Exception" />
<!-- Trade Info update -->
  <xsd:element name="requestTradeReferenceInformationUpdate" type="RequestTradeReferenceInformationUpdate" />
  <xsd:element name="requestTradeReferenceInformationUpdateRetracted" type="RequestTradeReferenceInformationUpdateRetracted" />
  <xsd:element name="tradeReferenceInformationUpdateAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="tradeReferenceInformationUpdateException" type="Exception" />
<!-- Trade Change -->
  <xsd:element name="tradeChangeAdvice" type="TradeChangeAdvice" />
  <xsd:element name="tradeChangeAdviceRetracted" type="TradeChangeAdviceRetracted" />
  <xsd:element name="tradeChangeAdviceAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="tradeChangeAdviceException" type="Exception" />
<!-- Consent Negotiation -->
  <xsd:element name="requestConsent" type="RequestConsent" />
  <xsd:element name="requestConsentRetracted" type="RequestConsentRetracted" />
  <xsd:element name="consentAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="consentException" type="Exception" />
  <xsd:element name="consentGranted" type="ConsentGranted" />
  <xsd:element name="consentRefused" type="ConsentRefused" />
<!-- Confirmation -->
  <xsd:element name="requestConfirmation" type="RequestConfirmation">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The confirmation process starts with the requestConfirmation message. The message may be used to request the confirmation of a new trade or any other event supported by FpML such as novation, terminations, amendments, etc.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="requestConfirmationRetracted" type="ConfirmationRetracted">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A requestConfirmation message may be cancelled using the requestConfirmationRetracted message.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="confirmationAcknowledgement" type="EventRequestAcknowledgement">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A business acknowledgement message to indicate that the previously sent message was sucessfully processed.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="confirmationException" type="Exception">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A message sent to inform another system that some exception has been detected.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="confirmationStatus" type="ConfirmationStatus">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The confirmationStatus message provides the status of the matching process: matched, mismatched, unmatched, or alleged. It may also provide the best fit trade(s) or event(s) as result of the matching process.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="confirmationAgreed" type="ConfirmationAgreed">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The confirmationAgreed message is sent when the matching process returns a proposed match (trade or event) and the Confirmation Requester agrees with it.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="confirmationDisputed" type="ConfirmationDisputed">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The confirmationDisputed message is sent when the matching process returns a proposed match (trade or event) and the Confirmation Requester disputes it.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
<!-- Clearing -->
  <xsd:element name="requestClearing" type="RequestClearing" />
  <xsd:element name="requestClearingRetracted" type="RequestClearingRetracted" />
  <xsd:element name="clearingAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="clearingException" type="Exception" />
  <xsd:element name="clearingRefused" type="ClearingRefused" />
  <xsd:element name="clearingStatus" type="ClearingStatus" />
  <xsd:element name="clearingConfirmed" type="ClearingConfirmed" />
<!-- Allocation -->
  <xsd:element name="requestAllocation" type="RequestAllocation" />
  <xsd:element name="requestAllocationRetracted" type="RequestAllocationRetracted" />
  <xsd:element name="allocationAcknowledgement" type="EventRequestAcknowledgement" />
  <xsd:element name="allocationException" type="Exception" />
  <xsd:element name="allocationRefused" type="AllocationRefused" />
  <xsd:element name="allocationApproved" type="AllocationApproved" />
<!--Option Exercise / Expiry  -->
  <xsd:element name="optionExpirationNotification" type="ExecutionNotification" />
</xsd:schema>

