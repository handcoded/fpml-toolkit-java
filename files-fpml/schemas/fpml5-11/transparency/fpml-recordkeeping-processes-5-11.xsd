<?xml version="1.0" encoding="utf-8"?>
<!-- 
== Copyright (c) 2018-2020 All rights reserved. 
== Financial Products Markup Language is subject to the FpML public license. 
== A copy of this license is available at http://www.fpml.org/license/license.html
-->
<xsd:schema xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns="http://www.fpml.org/FpML-5/transparency" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:fpml-annotation="http://www.fpml.org/annotation" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.fpml.org/FpML-5/transparency" ecore:documentRoot="FpML" ecore:nsPrefix="trnsp" ecore:package="org.fpml.transparency" version="$Revision: 7629 $" elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xsd:include schemaLocation="fpml-reg-reporting-shared-5-11.xsd" />
  <xsd:include schemaLocation="fpml-reg-reporting-shared-5-11.xsd" />
  <xsd:include schemaLocation="fpml-com-5-11.xsd" />
  <xsd:include schemaLocation="fpml-eq-shared-5-11.xsd" />
  <xsd:complexType name="InapplicableRegulation">
    <xsd:annotation></xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="supervisoryBody" type="xsd:token" />
          <xsd:element name="regulation" type="xsd:token" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:element name="regulation" type="xsd:token" />
      </xsd:choice>
      <xsd:element name="withdrawalReasonCode" type="ReasonCode" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RegulatoryReportingAcknowledgement">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining an acknowledgement to a regulatory reporting submission, e.g. regulatoryDisclosure or regulatoryWithdrawal.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Message">
        <xsd:sequence>
          <xsd:element name="header" type="ResponseMessageHeader" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Standard FpML message header</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="tradeIdentifier" type="PartyTradeIdentifier" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>identifies the affected trade</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="reportingStatus" type="ReportingStatus" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Information about how the position is being reported to regulators.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="additionalData" type="AdditionalData" minOccurs="0" />
          <xsd:element name="party" type="Party" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Reference information about parties, business units, and persons involed in the trade.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RegulatoryReportingException">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A type defining the basic content for a message sent to inform another system that some exception has been detected in a regulatory reporting message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="Message">
        <xsd:sequence>
          <xsd:element name="header" type="ExceptionMessageHeader" minOccurs="0">
            <xsd:annotation></xsd:annotation>
          </xsd:element>
          <xsd:group ref="Exception.model" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="RegulatoryWithdrawal">
    <xsd:annotation>
      <xsd:documentation>A type defining the message used to request withdrawal from one or more jurisdictions.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="AddressedMessage">
        <xsd:sequence>
          <xsd:element name="onBehalfOf" type="OnBehalfOf" minOccurs="0" maxOccurs="4">
            <xsd:annotation>
              <xsd:documentation xml:lang="en">Indicates which party (or parties) (and accounts) a trade or event is being processed for. Normally there will only be a maximum of 2 parties, but in the case of a novation there could be a transferor, transferee, remaining party, and other remaining party. Also, in the context of a trade package there could be several parties for which limit check is requested, necessitating multiple onBehalfOf elements. Except for these cases, there should be no more than two onBehalfOf references in a message.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="tradeIdentifier" type="PartyTradeIdentifier" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>identifies the affected trade</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="primaryAssetClass" type="AssetClass" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The asset class of the underlying product.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="inapplicableRegulation" type="InapplicableRegulation" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Indicates which regulation the trade is to withdrawn from. At least one child element must be selected.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
<!-- requested action? ( retain records, purge records )  -->
          <xsd:element name="withdrawalReason" minOccurs="0">
            <xsd:simpleType>
              <xsd:restriction base="xsd:normalizedString">
                <xsd:maxLength value="255" />
                <xsd:minLength value="1" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
          <xsd:element name="fullyWithdrawn" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>Indicates if the trade is now fully withdrawn from all regulatory reports. This can be used by a trade repository to perform a consistency check. For instance, if "fullyWithdrawn" is "true" but the TR believes that the trade is still reportable to at least one regulator, it could report an exception with the identity of that regulator. Or if "fullyWithdrawn" is false but the TR believes that the trade is no longer reportable to any regulator, the TR should report that fact.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="relatedParty" type="RelatedParty" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element name="party" type="Party" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>The supporting party definitions.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="regulatoryReportingAcknowledgement" type="RegulatoryReportingAcknowledgement">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to report that a regulatory reporting message (e.g. regulatory disclosure or withdrawal) was processed successfully, and the status of reporting to any regulators.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="regulatoryReportingException" type="RegulatoryReportingException">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to report that a regulatory reporting message was not processed successfully, and the reasons for that.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>

